{"mappings":"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","sources":["src/presentation/Tab.ts","src/presentation/TabCredits.ts","src/services/CalculateOneSleepCycleService.ts","src/services/CalculateOneSleepCycleLaterService.ts","src/util/dateToTimeString.ts","src/presentation/TabSleep.ts","src/services/CalculateOneSleepCycleBeforeService.ts","src/presentation/TabWakeUp.ts","src/presentation/TabManager.ts","src/presentation/TabManagerMenu.ts","src/presentation/TabAbout.ts","src/main.ts"],"sourcesContent":["export default abstract class Tab {\n  htmlElement: HTMLDivElement\n\n  abstract setup(): void\n\n  constructor(\n    private document: Document,\n    readonly id: string,\n    readonly name: string,\n    readonly outputDivId?: string\n  ) {\n    this.htmlElement = this.document.createElement('div')\n    this.htmlElement.classList.add('tab')\n    this.htmlElement.classList.add('transparent')\n    this.htmlElement.classList.add('hide')\n    this.htmlElement.id = id\n  }\n}\n","import Tab from './Tab';\n\nexport default class TabCredits extends Tab {\n  constructor(document: Document) {\n    super(document, 'tab-credits', 'Créditos')\n    this.htmlElement.innerHTML = `\n      <p><strong> Créditos </strong></p>\n      <p> <a href=\"https://www.flaticon.com/premium-icon/clock_2838590?term=clock&page=1&position=13&page=1&position=13&related_id=2838590&origin=search\">Relógio</a> da logo </p>\n      <p> <a href=\"https://www.flaticon.com/premium-icon/bed_3010012?term=bed&page=1&position=8&page=1&position=8&related_id=3010012&origin=search\">Cama</a> da logo </p>\n    `\n  }\n\n  setup(): void { }\n}\n","export interface Args {\n  baseTime: string\n  oneSleepCycleDurationInMinutes?: number\n}\n\n/**\n * Classe base que calcula horários baseados em `baseTime` em intervalos de\n * tempo de `sleepCycleDurationInMinutes`. As classes que herdam dela devem\n * implementar o método `operation`. A implementação de `operation` determina\n * se a classe filha calcula um novo horário antes ou depois de `baseTime`.\n *\n * @param {string} baseTime horário base no formato HH:mm\n * @param {number} sleepCycleDurationInMinutes duração de um ciclo de sono em minutos\n */\nexport default abstract class CalculateOneSleepCycleService {\n  protected startTime: string\n  protected oneSleepCycleDurationInMinutes = 90\n  protected DEFAULT_DATE = '2000-01-01'\n\n  /**\n   * Esse método deve ser sobrescrito pela classe filha.\n   *\n   * Se é implementado com `n1`+`n1` a classe filha calcula horários posteriores.\n   *\n   * Se é implementado com `n1`-`n1` a classe filha calcula horários prévios.\n   *\n   * @param n1 duração em minutos 1\n   * @param n2 duração em minutos 2\n   */\n  protected abstract operation(n1: number, n2: number): number\n\n  public run() {\n    const startDate = new Date(`${this.DEFAULT_DATE} ${this.startTime}`)\n\n    startDate.setMinutes(\n      this.operation(\n        startDate.getMinutes(),\n        this.oneSleepCycleDurationInMinutes\n      )\n    )\n\n    const oneSleepCycleLaterOfBefore = startDate\n    // hh:mm:ss => hh:mm\n    const formattedTime = oneSleepCycleLaterOfBefore\n      .toLocaleTimeString('pt-BR')\n      .replace(/:\\d\\d$/, '')\n\n    this.startTime = formattedTime\n    return formattedTime\n  }\n}\n","import CalculateOneSleepCycleService from './CalculateOneSleepCycleService'\nimport { Args } from './CalculateOneSleepCycleService'\n\n/**\n * Calcula horários a partir de `baseTime` em intervalos de\n * tempo de `sleepCycleDurationInMinutes`.\n *\n * @param {string} baseTime horário base no formato HH:mm\n * @param {number} sleepCycleDurationInMinutes duração de um ciclo de sono em minutos\n */\nexport default class CalculateOneSleepCycleLaterService extends CalculateOneSleepCycleService {\n  constructor(\n    { baseTime, oneSleepCycleDurationInMinutes = 90 }: Args\n  ) {\n    super()\n    this.startTime = baseTime\n    this.oneSleepCycleDurationInMinutes = oneSleepCycleDurationInMinutes\n  }\n\n  protected operation(mili1: any, mili2: any): number {\n    return mili1 + mili2\n  }\n}\n","export default function dateToTimeString(date: Date): string {\n  let hours = new String(date.getHours())\n  hours = hours.padStart(2, '0')\n  let minutes = new String(date.getMinutes())\n  minutes = minutes.padStart(2, '0')\n  return `${hours}:${minutes}`\n}\n\n","import CalculateOneSleepCycleLaterService from '../services/CalculateOneSleepCycleLaterService'\nimport dateToTimeString from '../util/dateToTimeString'\nimport Tab from './Tab'\n\nexport default class TabSleep extends Tab {\n  public input: HTMLInputElement\n\n  constructor(document: Document) {\n    super(document, 'tab-sleep', 'Dormir')\n\n    const now = dateToTimeString(new Date())\n    this.htmlElement.innerHTML = `\n      <p>Eu quero dormir às:</p>\n\n      <label for=\"base-time-sleep\" class=\"form-label\">\n        <input class=\"form-control\" type=\"time\" id=\"base-time-sleep\" value=\"${now}\">\n      </label>\n\n      <p>pra acordar possivelmente às:</p>\n      <div id=\"times-wake-up\"></div>\n    `\n\n    this.input = this.htmlElement.querySelector('input')\n  }\n\n  setup(): void {\n    const onInputChange = (event: Event) => {\n      let baseTime = `${(<HTMLInputElement>event.target).value}`\n      const timesDiv = document.querySelector('#times-wake-up') as HTMLDivElement\n      timesDiv.innerText = ''\n\n      let oneSleepCycleLater: string\n      let calc = new CalculateOneSleepCycleLaterService({ baseTime })\n      let li: HTMLLIElement\n\n      for (let index = 0; index < 5; index++) {\n        oneSleepCycleLater = calc.run()\n        baseTime = oneSleepCycleLater\n        li = document.createElement('li')\n        li.innerText = oneSleepCycleLater\n        timesDiv.appendChild(li)\n      }\n    }\n\n    this.input.addEventListener('change', onInputChange)\n    this.input.addEventListener('blur', (event: Event) => {\n      console.log('hey');\n      onInputChange(event)\n    })\n  }\n}\n\n","import CalculateOneSleepCycleService from './CalculateOneSleepCycleService'\nimport { Args } from './CalculateOneSleepCycleService'\n\n/**\n * Calcula horários prévios a `baseTime` em intervalos de\n * tempo de `sleepCycleDurationInMinutes`.\n *\n * @param {string} baseTime horário base no formato HH:mm\n * @param {number} sleepCycleDurationInMinutes duração de um ciclo de sono em minutos\n */\nexport default class CalculateOneSleepCycleBeforeService extends CalculateOneSleepCycleService {\n  constructor(\n    { baseTime, oneSleepCycleDurationInMinutes = 90 }: Args\n  ) {\n    super()\n    this.startTime = baseTime\n    this.oneSleepCycleDurationInMinutes = oneSleepCycleDurationInMinutes\n  }\n\n  protected operation(mili1: any, mili2: any): number {\n    return mili1 - mili2\n  }\n}\n","import CalculateOneSleepCycleBeforeService from '../services/CalculateOneSleepCycleBeforeService'\nimport dateToTimeString from '../util/dateToTimeString'\nimport Tab from './Tab'\n\nexport default class TabWakeUp extends Tab {\n  public input: HTMLInputElement\n\n  constructor(document: Document) {\n    super(document, 'tab-wake-up', 'Acordar', 'times-sleep')\n\n    const now = dateToTimeString(new Date())\n    this.htmlElement.innerHTML = `\n      <p>Eu quero acordar às:</p>\n\n      <label for=\"base-time-sleep\" class=\"form-label\">\n        <input class=\"form-control\" type=\"time\" id=\"base-time-wake-up\" value=\"${now}\">\n      </label>\n\n      <p>dormindo possivelmente às:</p>\n      <div id=\"times-sleep\"></div>\n    `\n\n    this.input = this.htmlElement.querySelector('input')\n  }\n\n  setup(): void {\n    const onInputChange = (event: Event) => {\n      let baseTime = `${(<HTMLInputElement>event.target).value}`\n      const timesDiv = document.querySelector('#times-sleep') as HTMLDivElement\n      timesDiv.innerText = ''\n\n      let oneSleepCycleBefore: string\n      let calc = new CalculateOneSleepCycleBeforeService({ baseTime })\n      let li: HTMLLIElement\n\n      for (let index = 0; index < 5; index++) {\n        oneSleepCycleBefore = calc.run()\n        baseTime = oneSleepCycleBefore\n        li = document.createElement('li')\n        li.innerText = oneSleepCycleBefore\n        timesDiv.appendChild(li)\n      }\n    }\n\n    this.input.addEventListener('change', onInputChange)\n    this.input.addEventListener('blur', onInputChange)\n  }\n}\n\n","import Tab from './Tab'\nimport TabManagerMenu from './TabManagerMenu'\n\nexport default class TabManager {\n  constructor(\n    private htmlElement: HTMLDivElement,\n    readonly tabManagerMenu: TabManagerMenu,\n    tabs: Tab[]\n  ) {\n    // Impede que o Hot Reload fique adicionando várias Tabs\n    this.htmlElement.innerText = ''\n    tabs.forEach(t => this.register(t))\n    this.htmlElement.prepend(tabManagerMenu.htmlElement)\n    this.setActive(tabs[0].id)\n    this.tabManagerMenu.setActive(tabs[0].id.replace(/^tab/, 'btn'))\n  }\n\n  register(tab: Tab): void {\n    tab.setup()\n    this.htmlElement.append(tab.htmlElement)\n  }\n\n  setActive(tabId: string) {\n    const currentActiveTab = this.htmlElement.querySelector('.tab.active')\n    currentActiveTab?.classList.add('transparent')\n    currentActiveTab?.classList.add('hide')\n    currentActiveTab?.classList.remove('active')\n\n    const toBeActivated = this.htmlElement.querySelector(`#${tabId}`)\n    toBeActivated.classList.remove('transparent')\n    toBeActivated.classList.remove('hide')\n    setTimeout(() => {\n      toBeActivated.classList.add('active')\n    }, 100);\n  }\n\n  setupMenuListeners() {\n    const setupListener = (button: HTMLButtonElement) => {\n      button.addEventListener('click', () => {\n        this.tabManagerMenu.setActive(button.id)\n        this.setActive(button.id.replace(/^btn/, 'tab'))\n        button.classList.add('active')\n      })\n    }\n\n    this.htmlElement.querySelectorAll('button')\n      .forEach(button => setupListener(button))\n  }\n}\n","export default class TabManagerMenu {\n  htmlElement: HTMLDivElement\n\n  constructor(private document: Document, tabs: { id: string, name: string }[]) {\n    this.htmlElement = this.document.createElement('div')\n    this.htmlElement.classList.add('tab-manager-menu')\n    this.htmlElement.innerHTML = tabs.map(\n      t => `<button id=\"btn-${t.id}\"> ${t.name} </button>`).join('')\n  }\n\n  setActive(buttonId: string): void {\n    const currentlyActiveButton = this.htmlElement.querySelector('button.active')\n    currentlyActiveButton?.classList.remove('active')\n\n    const toBeActivetated = this.htmlElement.querySelector(`#${buttonId}`)\n    toBeActivetated.classList.add('active')\n  }\n}\n","import Tab from './Tab';\n\nexport default class TabAbout extends Tab {\n  constructor(document: Document) {\n    super(document, 'tab-about', 'Sobre')\n    this.htmlElement.innerHTML = `\n      <p>Ainda vou acrescentar uma breve descrição sobre esse app aqui.</p>\n      <p>Feito por <a href=\"https://github.com/yudi-azvd\">Yudi Yamane</a></p>\n      <p>Código fonte: <a href=\"https://github.com/yudi-azvd/bedtime-calculator\">yudi-azvd/bedtime-calculator</a></p>\n    `\n  }\n\n  setup(): void { }\n}\n","import TabCredits from './presentation/TabCredits'\nimport TabSleep from './presentation/TabSleep'\nimport TabWakeUp from './presentation/TabWakeUp'\nimport TabManager from './presentation/TabManager'\nimport TabManagerMenu from './presentation/TabManagerMenu'\nimport TabAbout from './presentation/TabAbout'\n\nfunction main() {\n  const tabManagerHtmlElem = document.querySelector('.tab-manager') as HTMLDivElement\n  const tabs = [\n    new TabSleep(document),\n    new TabWakeUp(document),\n    new TabCredits(document),\n    new TabAbout(document)\n  ]\n\n  const tabManagerMenu = new TabManagerMenu(document,\n    tabs.map(tab => ({ id: tab.id.replace(/tab-/, ''), name: tab.name })))\n\n  const tabManager = new TabManager(\n    tabManagerHtmlElem,\n    tabManagerMenu,\n    tabs,\n  )\n\n  tabManager.setupMenuListeners()\n}\n\nmain()\n"],"names":["$91239879e4e0b3f0$export$2e2bcd8739ae039","document","id","name","outputDivId","this","htmlElement","createElement","classList","add","$788baa5a87fb0eee$export$2e2bcd8739ae039","super","innerHTML","$04a9f6b70c5a64b0$export$2e2bcd8739ae039","run","startDate","Date","DEFAULT_DATE","startTime","setMinutes","operation","getMinutes","oneSleepCycleDurationInMinutes","formattedTime","toLocaleTimeString","replace","$3dd853ceb74a3d5e$export$2e2bcd8739ae039","baseTime","mili1","mili2","date","hours","String","getHours","padStart","minutes","$eb058dd2256f6d64$export$2e2bcd8739ae039","document1","now","$855defcea978a3aa$export$2e2bcd8739ae039","querySelector","onInputChange","event","target","value","timesDiv","oneSleepCycleLater","innerText","li","calc","index","$776b1ee4edcfb4c1$export$2e2bcd8739ae039","$97b7d3896dc5aead$export$2e2bcd8739ae039","oneSleepCycleBefore","$24f994d4033b4b19$export$2e2bcd8739ae039","tabManagerMenu","tabs","forEach","t","register","prepend","setActive","tab","setup","append","tabId","currentActiveTab","remove","toBeActivated","setTimeout","setupMenuListeners","setupListener","button","addEventListener","querySelectorAll","$7d7eb1325f1c3053$export$2e2bcd8739ae039","map","join","buttonId","$bb8a9aee58162ff9$export$2e2bcd8739ae039","tabManagerHtmlElem","$5ba171b4a505aeb2$var$main"],"version":3,"file":"index.2c947a6c.js.map"}